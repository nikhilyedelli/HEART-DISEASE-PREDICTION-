# -*- coding: utf-8 -*-
"""HEART DISEASE PREDICTION

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pRGIROeXni0RBo6vh0gjto9kxbtDFw2_
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.linear_model import LogisticRegression

heart_data=pd.read_csv('/content/heart.csv')

heart_data.head()

heart_data.tail()

heart_data.shape

heart_data.info()

heart_data.isnull().sum()

heart_data.describe()

heart_data['target'].value_counts()

"""1-> defective heart


0-> healthy heart


"""

X=heart_data.drop(columns='target',axis=1)
Y=heart_data['target']

print(X)

print(Y)

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,stratify=Y,random_state=2)

print(X.shape,X_train.shape,X_test.shape)

"""model traing

logistic regression
"""

model=LogisticRegression()

model.fit(X_train,Y_train)

"""model evaluation

"""

#accuray on training data
X_train_prediction=model.predict(X_train)
training_data_accuracy=accuracy_score(X_train_prediction,Y_train)

print('accuracy on training data:',training_data_accuracy)

#accuray on test data
X_test_prediction=model.predict(X_test)
test_data_accuracy=accuracy_score(X_test_prediction,Y_test)

print('accuray on test data:',test_data_accuracy)

"""buliding a predictive system

"""

input_data=(57,0,0,120,354,0,1,163,1,0.6,2,0,2)
 #input_data to a numpy array
input_data_as_numpy_array=np.asarray(input_data)
 #reshape the numpy array we are predicting for only on instace
input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)
prediction =model.predict(input_data_reshaped)
print(prediction)
if (prediction[0]==0):
  print('this person as not have a heart disease')
else:
  print('this person has heart disease ')

[]